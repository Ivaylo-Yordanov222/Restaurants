@model IEnumerable<CategoryConciseViewModel>
@{
    ViewData["Title"] = "Категории";
}
@*Modal*@
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Внимание!</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Наистина ли искате да изтриете тази категория от базата с данни? Операцията ще изтрие всички продукти в нея и участията им в поръчкита
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Затвори</button>

                <form>
                    <button type="submit" class="btn btn-danger">Изтрий</button>
                    <input name="__RequestVerificationToken" type="hidden" />
                    <input type="hidden" />
                </form>
            </div>
        </div>
    </div>
</div>
<h1 class="text-lg-center text-md-center text-dark bg-light">Категории</h1>

<div class="customDivs">
    <div class="form-inline">
        <div class="form-group mx-sm-3 mb-2">
            <button class="btn btn-dark" id="Add">Добави</button>
        </div>
    </div>
    <table class="table table-striped table-dark table-responsive-sm">
        <thead>
            <tr>
                <th scope="col">Номер категория</th>
                <th scope="col">Име</th>
                <th scope="col">Промяна</th>
                <th scope="col">Изтриване</th>
            </tr>
        </thead>
        <tbody>
            @Html.DisplayForModel()
            <tr class="no_record" style="display:none"><th scope="row"></th><td></td><td></td><td></td></tr>
        </tbody>
    </table>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
$(function () {
    $("#Add").on("click", function (e) {
        e.preventDefault();
        let buttonId = this.id;
        if (buttonId == "Add") {
            let form = document.getElementById("addForm");
            if (form != null) {
                return;
            }
            $.ajax({
                type: "GET",
                url: "@Url.Action("add","category")",
                dataType: "text",
                success: function (msg) {
                    let data = msg;
                    $(".form-inline").eq(1).after(data);
                    let form = document.getElementById("addForm");
                    $.validator.unobtrusive.parse(form);
                },
                error: function (req, status, error) {
                    alert(error);
                },
                complete: function () {
                    Add(buttonId);
                }
            });
        }
    });
    $(document).on("submit", "form", function (e) {
        e.preventDefault();
        let form = $(this);
        if (form.get(0).id == "addForm") {
            debugger;
            let inputValue = $("#addInput").val();
            let token = form.find("input[type=hidden]").val();
            form.remove();
            $.ajax({
                type: "POST",
                url: "@Url.Action("add","category")",
                headers: { "RequestVerificationToken": token },
                data: { Name: inputValue },
                dataType: "text",
                success: function (msg) {
                    debugger;
                    if (IsJsonString(msg)) {
                        var data = JSON.parse(msg);
                        if (data.status == "danger") {
                            $("table").before(GetMessage(data.message, data.status));
                        }
                    }
                    else {
                        debugger;
                        var data = msg;
                        if (data.includes("addForm")) {
                            $(".form-inline").eq(1).after(data);
                            Add();
                        }
                        else {
                            $("tbody tr:first").before(data);
                            let tdVal = $("tbody tr:first").find("td").eq(0).text().trim();
                            let message = `Успешно е добавена категорията ${tdVal}`;
                            $("table").before(GetMessage(message,"success"));
                        }
                    }
                },
                error: function (req, status, error) {
                    alert(error);
                },
                complete: function (msg) {
                }
            });
        }
        else if (form.get(0).id.includes("permanent")) {
            debugger;
            let elementName = form.get(0).id;
            let token = form.find("input[type=hidden]").val();
            $.ajax({
                type: "POST",
                url: "@Url.Action("delete","category")",
                headers: { "RequestVerificationToken": token },
                data: { id: elementName },
                dataType: "text",
                success: function (msg) {
                    let message = GetMessage(msg, "danger");
                    $("table").before(message);
                },
                error: function (req, status, error) {
                    alert(error);
                },
                complete: function () {
                    let deleteId = form.find("input[type=hidden]").eq(1).val();
                    $("#" + deleteId).closest("tr").remove();
                    $("#deleteModal").modal("hide");
                }
            });
        }
        else if (form.get(0).id.includes("Delete")) {
            let formConfirm = $("#deleteModal").find("form").eq(0);
            formConfirm.attr("method", "post");
            formConfirm.attr("id", form.get(0).id + "_permanent");
            let token = form.find("input[type=hidden]").eq(0).val();
            let inputHidden = formConfirm.find("input[type=hidden]").eq(0);
            let inputHidden2 = formConfirm.find("input[type=hidden]").eq(1);
            inputHidden2.attr("value", form.get(0).id);
            inputHidden.val(token);
        }
        else if (form.get(0).id.includes("Edit")) {
            let elementName = form.get(0).id;
            let token = form.find("input[type=hidden]").val();
            let spinner = form.find(".spinner-grow").eq(0);
            spinner.show();
            $.ajax({
                type: "POST",
                url: "@Url.Action("edit","category")",
                headers: { "RequestVerificationToken": token },
                data: { id: elementName },
                dataType: "text",
                success: function (msg) {
                    let row = $("#" + elementName).closest("tr");
                    let col2 = row.find("td").eq(0).html(msg);
                    let formtovalidateNumber = elementName.match(/\d+/);
                    let formToValidate = $("#Update_" + formtovalidateNumber).get(0);
                    $.validator.unobtrusive.parse(formToValidate);
                },
                error: function (req, status, error) {
                    alert(error);
                },
                complete: function () {
                    spinner.hide();
                }
            });
        }
        else if (form.get(0).id.includes("Update")) {
            let elementName = form.get(0).id;
            let catId = elementName.match(/\d+/);
            let inputValue = form.find("input[type=text]").eq(0).val();
            let token = form.find("input[type=hidden]").eq(1).val();
            let spinner = form.find(".spinner-grow").eq(0);
            spinner.show();
            $.ajax({
                type: "POST",
                url: "@Url.Action("update","category")",
                headers: { "RequestVerificationToken": token },
                data: { id: catId, name: inputValue },
                dataType: "text",
                success: function (msg) {
                    if (IsJsonString(msg)) {
                        var data = JSON.parse(msg);
                        let row = $("#" + elementName).closest("tr");
                        let col2 = row.find('td:eq(0)');
                        col2.html("<a class='text-light' href='/Admin/Category/Details/" + data.id + "'>" + data.name + "</a>");
                    } else {
                        let row = $("#" + elementName).closest("tr");
                        let col2 = row.find("td").eq(0).html(msg);
                    }
                },
                error: function (req, status, error) {
                    alert(error);
                },
                complete: function () {
                    //spinner.hide();
                }
            });
        }
    });
    $(document).on("click", "button", function (e) {
        let btn = $(this);
        if (btn.hasClass("close")) {
            e.preventDefault();
            let row = btn.closest("tr");
            let tdId = row.find("th").eq(0).text();
            let td = btn.closest("td");
            let tdValue = btn.closest("form").find("input[type=hidden]").eq(0).val();
            let link = `<a class="text-light" href="/Admin/Category/Details/${tdId}">${tdValue}</a>`;
            let form = btn.closest("form");
            form.remove();
            td.html(link);
        }
    });

    function Add() {
        $("#addForm").toggle(300);
    }
    function IsJsonString(str) {
        try {
            JSON.parse(str);
        } catch (e) {
            return false;
        }
        return true;
    }
    function GetMessage(message, status) {
        return `<div class='alert alert-${status} alert-dismissible fade show' role='alert'>${message}<button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div>`;
    }
});
    </script>

}
